openapi: 3.0.3
info:
  title: Cache RL Optimization API
  description: API for training and deploying RL models for database cache optimization
  version: 1.0.0
paths:
  /health:
    get:
      summary: Health Check
      operationId: health_check_health_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
  /available-columns:
    get:
      tags:
        - database
      summary: Available Columns
      operationId: available_columns_available_columns_get
      parameters:
        - name: db_type
          in: query
          required: false
          schema:
            type: string
            description: 'Database type: mysql, postgres, or sqlite'
            default: mysql+mysqlconnector
            title: Db Type
          description: 'Database type: mysql, postgres, or sqlite'
        - name: host
          in: query
          required: false
          schema:
            type: string
            description: Database hostname
            default: ers-mariadb
            title: Host
          description: Database hostname
        - name: port
          in: query
          required: false
          schema:
            type: integer
            description: Database port
            default: '3306'
            title: Port
          description: Database port
        - name: user
          in: query
          required: false
          schema:
            type: string
            description: Database username
            default: cacheuser
            title: User
          description: Database username
        - name: password
          in: query
          required: false
          schema:
            type: string
            description: Database password
            default: cachepass
            title: Password
          description: Database password
        - name: database
          in: query
          required: false
          schema:
            type: string
            description: Database name
            default: cache_db
            title: Database
          description: Database name
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: array
                  items:
                    type: string
                title: Response Available Columns Available Columns Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /train:
    post:
      tags:
        - training
      summary: Start Training
      description: Start a new training job
      operationId: start_training_train_post
      parameters:
        - name: db_type
          in: query
          required: false
          schema:
            type: string
            description: 'Database type: mysql, postgres, or sqlite'
            default: mysql+mysqlconnector
            title: Db Type
          description: 'Database type: mysql, postgres, or sqlite'
        - name: host
          in: query
          required: false
          schema:
            type: string
            description: Database hostname
            default: ers-mariadb
            title: Host
          description: Database hostname
        - name: port
          in: query
          required: false
          schema:
            type: integer
            description: Database port
            default: '3306'
            title: Port
          description: Database port
        - name: user
          in: query
          required: false
          schema:
            type: string
            description: Database username
            default: cacheuser
            title: User
          description: Database username
        - name: password
          in: query
          required: false
          schema:
            type: string
            description: Database password
            default: cachepass
            title: Password
          description: Database password
        - name: database
          in: query
          required: false
          schema:
            type: string
            description: Database name
            default: cache_db
            title: Database
          description: Database name
        - name: algorithm
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/AlgorithmEnum'
            description: RL algorithm to usedqn, a2c, ppo
            default: dqn
          description: RL algorithm to usedqn, a2c, ppo
        - name: cache_size
          in: query
          required: false
          schema:
            type: integer
            description: Size of the cache
            default: 10
            title: Cache Size
          description: Size of the cache
        - name: max_queries
          in: query
          required: false
          schema:
            type: integer
            description: Maximum number of queries for training
            default: 500
            title: Max Queries
          description: Maximum number of queries for training
        - name: timesteps
          in: query
          required: false
          schema:
            type: integer
            description: Training timesteps
            default: 100000
            title: Timesteps
          description: Training timesteps
        - name: table_name
          in: query
          required: false
          schema:
            type: string
            description: Table name for trainingenergy_data, production_data, consumption_data, exchange_data, carbon_intensity, aggregated_production, comparison_analysis, consumption_forecast, cache_metrics
            default: cache_metrics
            title: Table Name
          description: Table name for trainingenergy_data, production_data, consumption_data, exchange_data, carbon_intensity, aggregated_production, comparison_analysis, consumption_forecast, cache_metrics
        - name: feature_columns
          in: query
          required: false
          schema:
            anyOf:
              - type: array
                items:
                  $ref: '#/components/schemas/FeatureColumnsEnum'
            description: Select one or more enum values for feature columnsrecency, usage_frequency, time_relevance, production_importance, volatility, complexity, calculated_priority, last_accessed, access_count
            title: Feature Columns
          description: Select one or more enum values for feature columnsrecency, usage_frequency, time_relevance, production_importance, volatility, complexity, calculated_priority, last_accessed, access_count
        - name: use_gpu
          in: query
          required: false
          schema:
            type: boolean
            description: Use GPU for training if available
            default: false
            title: Use Gpu
          description: Use GPU for training if available
        - name: batch_size
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
            description: Batch size for training
            title: Batch Size
          description: Batch size for training
        - name: learning_rate
          in: query
          required: false
          schema:
            anyOf:
              - type: number
            description: Learning rate for training
            title: Learning Rate
          description: Learning rate for training
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrainingResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /jobs/{job_id}:
    get:
      tags:
        - jobs
      summary: Get Job
      description: Get the status of a training job
      operationId: get_job_jobs__job_id__get
      parameters:
        - name: job_id
          in: path
          required: true
          schema:
            type: string
            title: Job Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobStatus'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /jobs:
    get:
      tags:
        - jobs
      summary: List Jobs
      description: List all training jobs
      operationId: list_jobs_jobs_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/JobStatus'
                type: array
                title: Response List Jobs Jobs Get
  /evaluate/{job_id}:
    post:
      tags:
        - evaluation
      summary: Evaluate Job Model
      description: Evaluate a trained model from a completed job
      operationId: evaluate_job_model_evaluate__job_id__post
      parameters:
        - name: job_id
          in: path
          required: true
          schema:
            type: string
            title: Job Id
        - name: steps
          in: query
          required: false
          schema:
            type: integer
            default: 1000
            title: Steps
        - name: use_gpu
          in: query
          required: false
          schema:
            type: boolean
            default: false
            title: Use Gpu
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
                title: Response Evaluate Job Model Evaluate  Job Id  Post
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /export/{job_id}:
    post:
      tags:
        - deployment
      summary: Export Job Model
      operationId: export_job_model_export__job_id__post
      parameters:
        - name: job_id
          in: path
          required: true
          schema:
            type: string
            title: Job Id
        - name: output_dir
          in: query
          required: false
          schema:
            type: string
            default: best_model
            title: Output Dir
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
                title: Response Export Job Model Export  Job Id  Post
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /db/seed:
    post:
      tags:
        - database
      summary: Seed Database
      description: Seed the database with mock energy data
      operationId: seed_database_db_seed_post
      parameters:
        - name: db_type
          in: query
          required: false
          schema:
            type: string
            description: 'Database type: mysql, postgres, or sqlite'
            default: mysql
            title: Db Type
          description: 'Database type: mysql, postgres, or sqlite'
        - name: host
          in: query
          required: false
          schema:
            type: string
            description: Database hostname
            default: ers-mariadb
            title: Host
          description: Database hostname
        - name: port
          in: query
          required: false
          schema:
            type: integer
            description: Database port
            default: '3306'
            title: Port
          description: Database port
        - name: user
          in: query
          required: false
          schema:
            type: string
            description: Database username
            default: cacheuser
            title: User
          description: Database username
        - name: password
          in: query
          required: false
          schema:
            type: string
            description: Database password
            default: cachepass
            title: Password
          description: Database password
        - name: database
          in: query
          required: false
          schema:
            type: string
            description: Database name
            default: cache_db
            title: Database
          description: Database name
        - name: hours
          in: query
          required: false
          schema:
            type: integer
            description: Hours of data to generate
            default: 1000
            title: Hours
          description: Hours of data to generate
        - name: data_types
          in: query
          required: false
          schema:
            anyOf:
              - type: array
                items:
                  $ref: '#/components/schemas/TableEnum'
            description: 'Data types: energy_data, production_data, consumption_data, exchange_data, carbon_intensity, aggregated_production, comparison_analysis, consumption_forecast, cache_metrics'
            title: Data Types
          description: 'Data types: energy_data, production_data, consumption_data, exchange_data, carbon_intensity, aggregated_production, comparison_analysis, consumption_forecast, cache_metrics'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
                title: Response Seed Database Db Seed Post
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /simulation/start:
    post:
      tags:
        - simulation
      summary: Start Simulation
      description: Start a simulation of derived data usage
      operationId: start_simulation_simulation_start_post
      parameters:
        - name: db_type
          in: query
          required: false
          schema:
            type: string
            description: 'Database type: mysql, postgres, or sqlite'
            default: mysql+mysqlconnector
            title: Db Type
          description: 'Database type: mysql, postgres, or sqlite'
        - name: host
          in: query
          required: false
          schema:
            type: string
            description: Database hostname
            default: ers-mariadb
            title: Host
          description: Database hostname
        - name: port
          in: query
          required: false
          schema:
            type: integer
            description: Database port
            default: '3306'
            title: Port
          description: Database port
        - name: user
          in: query
          required: false
          schema:
            type: string
            description: Database username
            default: cacheuser
            title: User
          description: Database username
        - name: password
          in: query
          required: false
          schema:
            type: string
            description: Database password
            default: cachepass
            title: Password
          description: Database password
        - name: database
          in: query
          required: false
          schema:
            type: string
            description: Database name
            default: cache_db
            title: Database
          description: Database name
        - name: update_interval
          in: query
          required: false
          schema:
            type: integer
            description: Simulation update interval in seconds
            default: 5
            title: Update Interval
          description: Simulation update interval in seconds
        - name: simulation_id
          in: query
          required: false
          schema:
            type: string
            description: Optional custom simulation ID
            title: Simulation Id
          description: Optional custom simulation ID
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
                title: Response Start Simulation Simulation Start Post
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /simulation/stop/{simulation_id}:
    post:
      tags:
        - simulation
      summary: Stop Simulation
      description: Stop a running simulation
      operationId: stop_simulation_simulation_stop__simulation_id__post
      parameters:
        - name: simulation_id
          in: path
          required: true
          schema:
            type: string
            title: Simulation Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
                title: Response Stop Simulation Simulation Stop  Simulation Id  Post
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /simulation/status:
    get:
      tags:
        - simulation
      summary: Simulation Status
      description: Get status of all running simulations
      operationId: simulation_status_simulation_status_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
                title: Response Simulation Status Simulation Status Get
  /simulation/status/{simulation_id}:
    get:
      tags:
        - simulation
      summary: Get Simulation Status
      description: Get status of a specific simulation
      operationId: get_simulation_status_simulation_status__simulation_id__get
      parameters:
        - name: simulation_id
          in: path
          required: true
          schema:
            type: string
            title: Simulation Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
                title: Response Get Simulation Status Simulation Status  Simulation Id  Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /cache/derived/weights:
    get:
      tags:
        - cache
      summary: Get Derived Data Weights
      description: Get current cache weights for derived data
      operationId: get_derived_data_weights_cache_derived_weights_get
      parameters:
        - name: host
          in: query
          required: false
          schema:
            type: string
            description: Database hostname
            default: ers-mariadb
            title: Host
          description: Database hostname
        - name: port
          in: query
          required: false
          schema:
            type: integer
            description: Database port
            default: '3306'
            title: Port
          description: Database port
        - name: user
          in: query
          required: false
          schema:
            type: string
            description: Database username
            default: cacheuser
            title: User
          description: Database username
        - name: password
          in: query
          required: false
          schema:
            type: string
            description: Database password
            default: cachepass
            title: Password
          description: Database password
        - name: database
          in: query
          required: false
          schema:
            type: string
            description: Database name
            default: cache_db
            title: Database
          description: Database name
        - name: endpoint
          in: query
          required: false
          schema:
            anyOf:
              - type: string
            description: Filter by endpoint type
            title: Endpoint
          description: Filter by endpoint type
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
                title: Response Get Derived Data Weights Cache Derived Weights Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /logs:
    get:
      tags:
        - monitoring
      summary: Get Logs
      description: Retrieve application logs with optional filtering
      operationId: get_logs_logs_get
      parameters:
        - name: lines
          in: query
          required: false
          schema:
            type: integer
            description: Number of log lines to return
            default: 100
            title: Lines
          description: Number of log lines to return
        - name: level
          in: query
          required: false
          schema:
            anyOf:
              - type: string
            description: Filter by log level (INFO, ERROR, etc.)
            title: Level
          description: Filter by log level (INFO, ERROR, etc.)
        - name: search
          in: query
          required: false
          schema:
            anyOf:
              - type: string
            description: Search string to filter logs
            title: Search
          description: Search string to filter logs
        - name: log_file
          in: query
          required: false
          schema:
            anyOf:
              - type: string
            description: Specific log file to read
            title: Log File
          description: Specific log file to read
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
                title: Response Get Logs Logs Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
components:
  schemas:
    AlgorithmEnum:
      type: string
      enum:
        - dqn
        - a2c
        - ppo
      title: AlgorithmEnum
    FeatureColumnsEnum:
      type: string
      enum:
        - recency
        - usage_frequency
        - time_relevance
        - production_importance
        - volatility
        - complexity
        - calculated_priority
        - last_accessed
        - access_count
      title: FeatureColumnsEnum
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          type: array
          title: Detail
      type: object
      title: HTTPValidationError
    JobStatus:
      properties:
        job_id:
          type: string
          title: Job Id
        status:
          type: string
          title: Status
        start_time:
          type: string
          title: Start Time
        end_time:
          anyOf:
            - type: string
          title: End Time
        model_path:
          anyOf:
            - type: string
          title: Model Path
        metrics:
          anyOf:
            - additionalProperties: true
              type: object
          title: Metrics
      type: object
      required:
        - job_id
        - status
        - start_time
      title: JobStatus
    TableEnum:
      type: string
      enum:
        - energy_data
        - production_data
        - consumption_data
        - exchange_data
        - carbon_intensity
        - aggregated_production
        - comparison_analysis
        - consumption_forecast
        - cache_metrics
      title: TableEnum
    TrainingResponse:
      properties:
        job_id:
          type: string
          title: Job Id
        status:
          type: string
          title: Status
        start_time:
          type: string
          title: Start Time
      type: object
      required:
        - job_id
        - status
        - start_time
      title: TrainingResponse
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
              - type: string
              - type: integer
          type: array
          title: Location
        msg:
          type: string
          title: Message
        type:
          type: string
          title: Error Type
      type: object
      required:
        - loc
        - msg
        - type
      title: ValidationError
